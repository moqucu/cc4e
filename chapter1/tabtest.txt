#include <stdio.h>

#define THRESHOLD 35
#define MAXLINE 70 /* maximum input line size */

/* get line into s, return length */
int get_line(char charArray[], int charArraySize);

/* removes leading whitespaces from character array */
void zap_leading_white_spaces(char sourceArray[], char targetArray[], int charArraySize);

/* removes trailing whitespaces from character array */
void zap_trailing_white_spaces(char sourceArray[], char targetArray[], int charArraySize);


/* print lines over 35 characters */
int main()
{
    int len;
    char line[MAXLINE]; /* current input line */
    char rightZappedLine[MAXLINE];
    char leftZappedLine[MAXLINE];

    while ((len = get_line(line, MAXLINE)) > 0)
        if (len > THRESHOLD)
        {
            zap_leading_white_spaces(line, leftZappedLine, MAXLINE);
            zap_trailing_white_spaces(leftZappedLine, rightZappedLine, MAXLINE);
            
            printf("%s", leftZappedLine);
        }
}

int get_line(char charArray[], int charArraySize)
{
    int character, i, lineLength;
    
    i = 0;
    lineLength = 0;
    
    while ((character = getchar()) != EOF)
    {
        /* reservere the last index for \0 */
        if (i < charArraySize - 2)
        {
            charArray[i] = character;
            ++i;
        }
        ++lineLength;
        if (character == '\n')
            break;
    }
    
    if (i > 0 && charArray[i - 1] != '\n')
    {
        charArray[i] = '\n';
        ++i;
    }
    charArray[i] = '\0';
    
    return(lineLength);
}

void zap_leading_white_spaces(char sourceArray[], char targetArray[], int charArraySize)
{
    int i, j;
    
    for (i = 0; i < charArraySize; ++i)
        if (sourceArray[i] != ' ' && sourceArray[i] != '\t')
            break;
    
    j = 0;
    while (i < charArraySize)
    {
        targetArray[j] = sourceArray[i];
        ++j;
        ++i;
    }
}

void zap_trailing_white_spaces(char sourceArray[], char targetArray[], int charArraySize)
{
    int i, j;
    
    i = charArraySize - 1;
    while (i >= 0)
    {
        if (sourceArray[i] == '\0')
            break;
        --i;
    }
        
    for (j = i; j >= 0; --j)
    {
        if (sourceArray[j] != '\0' && sourceArray[j] != ' ' && sourceArray[j] != '\t')
        {
            targetArray[j + 1] = '\0';
            break;
        }
    }
    
    while (j >= 0)
    {
        targetArray[j] = sourceArray[j];
        --j;
    }
}
